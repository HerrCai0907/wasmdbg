syntax = "proto3";
package wasm_debugger_grpc;

// ██████  ██████   ██████
// ██   ██ ██   ██ ██
// ██████  ██████  ██
// ██   ██ ██      ██
// ██   ██ ██       ██████

service WasmDebugger {
  rpc LoadModule(LoadRequest) returns (LoadReply);
  rpc RunCode(RunCodeRequest) returns (RunCodeReply);

  rpc GetLocal(GetLocalRequest) returns (GetLocalReply);
  rpc GetValueStack(NullRequest) returns (GetValueStackReply);
  rpc GetCallStack(GetCallStackRequest) returns (GetCallStackReply);
}
service WasmDAP {
  rpc RunImportFunction(RunImportFunctionRequest)
      returns (RunImportFunctionReply);
}

// ███████ ██   ██ ███████  ██████ ██    ██ ████████ ███████
// ██       ██ ██  ██      ██      ██    ██    ██    ██
// █████     ███   █████   ██      ██    ██    ██    █████
// ██       ██ ██  ██      ██      ██    ██    ██    ██
// ███████ ██   ██ ███████  ██████  ██████     ██    ███████

message LoadRequest { string file_name = 1; }
message LoadReply {
  Status status = 1;
  optional string error_reason = 2;
}

message RunCodeRequest { RunCodeType run_code_type = 1; }
message RunCodeReply {
  Status status = 1;
  optional string error_reason = 2;
}

message RunImportFunctionRequest {
  uint32 func_index = 1;
  repeated Value args = 2;
  repeated Value globals = 3;
  bytes memory = 4;
}
message RunImportFunctionReply {
  optional Value return_value = 1;
  repeated Value globals = 3;
  bytes memory = 4;
}

// ██      ██ ███████ ████████ ███████ ███    ██ ███████ ██████
// ██      ██ ██         ██    ██      ████   ██ ██      ██   ██
// ██      ██ ███████    ██    █████   ██ ██  ██ █████   ██████
// ██      ██      ██    ██    ██      ██  ██ ██ ██      ██   ██
// ███████ ██ ███████    ██    ███████ ██   ████ ███████ ██   ██

message GetLocalRequest { int32 call_stack = 1; }
message GetLocalReply {
  Status status = 1;
  optional string error_reason = 2;
  optional uint32 func_index = 3;
  repeated Value locals = 4;
}

message GetValueStackReply {
  Status status = 1;
  optional string error_reason = 2;
  repeated Value values = 4;
}

message GetCallStackRequest {}
message GetCallStackReply {
  Status status = 1;
  optional string error_reason = 2;
  repeated CodePosition stacks = 3;
}

// ██   ██ ███████ ██      ██████  ███████ ██████
// ██   ██ ██      ██      ██   ██ ██      ██   ██
// ███████ █████   ██      ██████  █████   ██████
// ██   ██ ██      ██      ██      ██      ██   ██
// ██   ██ ███████ ███████ ██      ███████ ██   ██

message NullRequest {}

enum Status {
  OK = 0;
  NOK = 1;
  FINISH = 2;
}

enum RunCodeType {
  START = 0;
  STEP = 1;
  STEP_OUT = 2;
  STEP_OVER = 3;
  CONTINUE = 4;
}

message CodePosition {
  uint32 func_index = 1;
  uint32 instr_index = 2;
}

message Value {
  oneof Value {
    int32 i32 = 1;
    int64 i64 = 2;
    float f32 = 3;
    double f64 = 4;
  };
}
